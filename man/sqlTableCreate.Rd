% Generated by roxygen2 (4.1.0): do not edit by hand
% Please edit documentation in R/TableCreate.R
\docType{methods}
\name{sqlTableCreate}
\alias{sqlTableCreate}
\alias{sqlTableCreate,DBIConnection-method}
\title{Create a simple table.}
\usage{
sqlTableCreate(con, table, fields, temporary = FALSE, ...)

\S4method{sqlTableCreate}{DBIConnection}(con, table, fields,
  temporary = FALSE, ...)
}
\arguments{
\item{con}{A database connection.}

\item{table}{Name of the table. Escaped with
\code{\link[DBI]{dbQuoteIdentifier}}.}

\item{fields}{Either a character vector or a data frame.

  A named character vector: Names are column names, values are types.
  Names are escaped with \code{\link[DBI]{dbQuoteIdentifier}}.
  Field types are unescaped.

  A data frame: field types are generated using
  \code{\link[DBI]{dbDataType}}.}

\item{temporary}{If \code{TRUE}, will generate a temporary table statement.}

\item{...}{Other arguments used by individual methods.}
}
\description{
Exposes interface to simple \code{CREATE TABLE} commands. The default
method is ANSI SQL 99 compliant.
}
\section{DBI-backends}{

If you implement one method (i.e. for strings or data frames), you need
to implement both, otherwise the S4 dispatch rules will be ambiguous
and will generate an error on every call.
}
\examples{
sqlTableCreate(ANSI(), "my-table", c(a = "integer", b = "text"))
sqlTableCreate(ANSI(), "my-table", iris)
}

